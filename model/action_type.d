module model.action_type;

/**
 * Возможные действия волшебника.
 * $(BR)
 * Волшебник не может совершать новые действия, если он ещё не восстановился после своего предыдущего действия (значение
 * `wizard.remainingActionCooldownTicks` больше `0`).
 * $(BR)
 * Волшебник не может использовать действие, если оно ещё не восстановилось после его предыдущего применения (значение
 * `remainingCooldownTicksByAction[actionType.ordinal ()]` больше `0`).
 */
enum ActionType : byte
{
    /**
     * Ничего не делать.
     */
    None,

    /**
     * Ударить посохом.
     * $(BR)
     * Атака поражает все живые объекты в секторе от `-game.staffSector / 2.0` до `game.staffSector / 2.0`.
     * Расстояние от центра волшебника до центра цели не должно превышать значение
     * `game.staffRange + livingUnit.radius`.
     */
    Staff,

    /**
     * Создать магическую ракету.
     * $(BR)
     * Магическая ракета является базовым заклинанием любого волшебника. Наносит урон при прямом попадании.
     * $(BR)
     * При создании магической ракеты её центр совпадает с центром волшебника, направление определяется как
     * `wizard.angle + move.castAngle`, а абсолютное значение скорости равно `game.magicMissileSpeed`.
     * Столкновения магического снаряда и создавшего его волшебника игнорируются.
     * $(BR)
     * Требует `game.magicMissileManacost` единиц магической энергии.
     */
    MagicMissile,

    /**
     * Создать ледяную стрелу.
     * $(BR)
     * Ледяная стрела наносит урон при прямом попадании, а также замораживает цель.
     * $(BR)
     * При создании ледяной стрелы её центр совпадает с центром волшебника, направление определяется как
     * `wizard.angle + move.castAngle`, а абсолютное значение скорости равно `game.frostBoltSpeed`.
     * Столкновения магического снаряда и создавшего его волшебника игнорируются.
     * $(BR)
     * Требует `game.frostBoltManacost` единиц магической энергии и изучения умения `FrostBolt`.
     */
    FrostBolt,

    /**
     * Создать огненный шар.
     * $(BR)
     * Огненный шар взрывается при достижении максимальной дальности полёта или при столкновении с живым объектом.
     * Наносит урон всем близлежащим живым объектам, а также поджигает их.
     * $(BR)
     * При создании огненного шара его центр совпадает с центром волшебника, направление определяется как
     * `wizard.angle + move.castAngle`, а абсолютное значение скорости равно `game.fireballSpeed`.
     * Столкновения магического снаряда и создавшего его волшебника игнорируются.
     * $(BR)
     * Требует `game.fireballManacost` единиц магической энергии и изучения умения `Fireball`.
     */
    Fireball,

    /**
     * Временно ускорить волшебника с идентификатором `move.statusTargetId` или самого себя, если такой волшебник
     * не найден.
     * $(BR)
     * Требует `game.hasteManacost` единиц магической энергии и изучения умения `Haste`.
     */
    Haste,

    /**
     * На время создать магический щит вокруг волшебника с идентификатором `move.statusTargetId` или самого себя,
     * если такой волшебник не найден.
     * $(BR)
     * Требует `game.shieldManacost` единиц магической энергии и изучения умения `Shield`.
     */
    Shield
}
